Layout/Concept

2 part app: cli/gui

The cli command, readelf.py, should be standard python. It does run
some system commands like readelf, file, and ldd.

gui all lives under "compliance", uses django so you need python-django or
  equivalent.  Recent versions of the cli also rely on django.

By default, typing "make" in the top-level will create the SQLite
  database both apps need.
 
linkage: bulk of the gui code
  models.py is the database/form models
  views.py is the data/form processing code

media: css/images/docs

templates: html pages using django's "template" language for data/form
	   handling (these also have some javascript glue)

The web app can be run "in-place"; otherwise, it expects to be run
from /opt/linuxfoundation/compliance.  Similarly, readelf.py can be
run in-place, but otherwise expects to be called from
/opt/linuxfoundation/bin.

To run the gui/server (as user compliance for installed package):
   /opt/linuxfoundation/bin/deps-checker.py start (for running installed)
   
To run the application in place, you *must* first run "make" to create the
database and docs, as well as populate the db with the static data:
   make
   bin/deps-checker.py start (for running in-place)

"deps-checker.py stop" will stop the server.

to access the gui: http://127.0.0.1:8000/linkage
admin interface: http://127/0.0.1:8000/admin 
	(username compliance, password compliance)
